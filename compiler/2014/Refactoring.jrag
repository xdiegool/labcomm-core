/* Temporary aspect with forwarding methods */
aspect Refactoring {
    syn String Decl.getName() = getTypeInstance().getName();
    syn DataType Decl.getDataType() = getTypeInstance().getDataType();

    public Field.Field(TypeInstance t) {
        this(t.getDataType(), t.getName(), t.getAnnotationList());
    }

    public TypeInstance.TypeInstance(DataType t, String n) {
        this(t, n, new  List<Annotation>());
        System.out.println("WARNING! TypeInstance(DataType, String) ignoring intention list");
    }

    public ConcreteType.ConcreteType(Type t, String n) {
        this(t, n, new  List<Intention>());
        System.out.println("WARNING! ConcreteType(Type, String) ignoring intention list");
    }
}
