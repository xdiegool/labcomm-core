program(decls) ::= <<
program {
    $decls:{d | $declKind(d)$ $prettyDecl(d.Type, d.Name)$};separator=";\n\n"$;
};
>>

declKind(decl) ::= <<
$if(decl.SampleDecl)$sample$else$typedef$endif$
>>

oldPrettyDecl(obj) ::= <<
$if(obj.arrayType)$$fooArrayType(obj)$$else$$(obj.TemplateType)(obj)$$endif$
>>

prettyDecl(obj, name) ::= <<
$(obj.TemplateType)(obj,name)$
>>

PrimType(obj, name) ::= <<
$obj.TypeName$ $name$
>>

UserType(obj, name) ::= <<
$obj.TypeName$ $name$
>>

VoidType(obj, name) ::= <<
void $name$
>>

StructType(obj, name) ::= <<
struct {
  $obj.TTFields:{f |$prettyDecl(f, f.Name)$ };separator=";\n"$;
} $name$
>>

ArrayType(obj, name) ::= <<
$obj.TypeName$ $name$$obj.ArrayDims:{d | [$d.TTString$]}$
>>

